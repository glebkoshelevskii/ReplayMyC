#ifndef RAYLIB_SERIALIZATION_H
#define RAYLIB_SERIALIZATION_H

#include <vector>
#include <cstdint>
#include <cstring>
#include "raylib.h"
#include "rmc_internal.h"

void serialize_Vector2(const Vector2& s);
void serialize_Vector3(const Vector3& s);
void serialize_Vector4(const Vector4& s);
void serialize_Matrix(const Matrix& s);
void serialize_Color(const Color& s);
void serialize_Rectangle(const Rectangle& s);
void serialize_Image(const Image& s);
void serialize_Texture(const Texture& s);
void serialize_RenderTexture(const RenderTexture& s);
void serialize_NPatchInfo(const NPatchInfo& s);
void serialize_GlyphInfo(const GlyphInfo& s);
void serialize_Font(const Font& s);
void serialize_Camera3D(const Camera3D& s);
void serialize_Camera2D(const Camera2D& s);
void serialize_Mesh(const Mesh& s);
void serialize_Shader(const Shader& s);
void serialize_MaterialMap(const MaterialMap& s);
void serialize_Material(const Material& s);
void serialize_Transform(const Transform& s);
void serialize_BoneInfo(const BoneInfo& s);
void serialize_Model(const Model& s);
void serialize_ModelAnimation(const ModelAnimation& s);
void serialize_Ray(const Ray& s);
void serialize_RayCollision(const RayCollision& s);
void serialize_BoundingBox(const BoundingBox& s);
void serialize_Wave(const Wave& s);
void serialize_AudioStream(const AudioStream& s);
void serialize_Sound(const Sound& s);
void serialize_Music(const Music& s);
void serialize_VrDeviceInfo(const VrDeviceInfo& s);
void serialize_VrStereoConfig(const VrStereoConfig& s);
void serialize_FilePathList(const FilePathList& s);
void serialize_AutomationEvent(const AutomationEvent& s);
void serialize_AutomationEventList(const AutomationEventList& s);
void serialize_InitWindow(int width, int height, const char* title);
void serialize_CloseWindow();
void serialize_WindowShouldClose();
void serialize_IsWindowReady();
void serialize_IsWindowFullscreen();
void serialize_IsWindowHidden();
void serialize_IsWindowMinimized();
void serialize_IsWindowMaximized();
void serialize_IsWindowFocused();
void serialize_IsWindowResized();
void serialize_IsWindowState(unsigned int flag);
void serialize_SetWindowState(unsigned int flags);
void serialize_ClearWindowState(unsigned int flags);
void serialize_ToggleFullscreen();
void serialize_ToggleBorderlessWindowed();
void serialize_MaximizeWindow();
void serialize_MinimizeWindow();
void serialize_RestoreWindow();
void serialize_SetWindowIcon(const Image& image);
void serialize_SetWindowIcons(const Image* images, int count);
void serialize_SetWindowTitle(const char* title);
void serialize_SetWindowPosition(int x, int y);
void serialize_SetWindowMonitor(int monitor);
void serialize_SetWindowMinSize(int width, int height);
void serialize_SetWindowMaxSize(int width, int height);
void serialize_SetWindowSize(int width, int height);
void serialize_SetWindowOpacity(float opacity);
void serialize_SetWindowFocused();
void serialize_GetScreenWidth();
void serialize_GetScreenHeight();
void serialize_GetRenderWidth();
void serialize_GetRenderHeight();
void serialize_GetMonitorCount();
void serialize_GetCurrentMonitor();
void serialize_GetMonitorPosition(int monitor);
void serialize_GetMonitorWidth(int monitor);
void serialize_GetMonitorHeight(int monitor);
void serialize_GetMonitorPhysicalWidth(int monitor);
void serialize_GetMonitorPhysicalHeight(int monitor);
void serialize_GetMonitorRefreshRate(int monitor);
void serialize_GetWindowPosition();
void serialize_GetWindowScaleDPI();
void serialize_SetClipboardText(const char* text);
void serialize_GetClipboardImage();
void serialize_EnableEventWaiting();
void serialize_DisableEventWaiting();
void serialize_ShowCursor();
void serialize_HideCursor();
void serialize_IsCursorHidden();
void serialize_EnableCursor();
void serialize_DisableCursor();
void serialize_IsCursorOnScreen();
void serialize_ClearBackground(const Color& color);
void serialize_BeginDrawing();
void serialize_EndDrawing();
void serialize_BeginMode2D(const Camera2D& camera);
void serialize_EndMode2D();
void serialize_BeginMode3D(const Camera3D& camera);
void serialize_EndMode3D();
void serialize_BeginTextureMode(RenderTexture2D target);
void serialize_EndTextureMode();
void serialize_BeginShaderMode(const Shader& shader);
void serialize_EndShaderMode();
void serialize_BeginBlendMode(int mode);
void serialize_EndBlendMode();
void serialize_BeginScissorMode(int x, int y, int width, int height);
void serialize_EndScissorMode();
void serialize_BeginVrStereoMode(const VrStereoConfig& config);
void serialize_EndVrStereoMode();
void serialize_LoadVrStereoConfig(const VrDeviceInfo& device);
void serialize_UnloadVrStereoConfig(const VrStereoConfig& config);
void serialize_LoadShader(const char* vsFileName, const char* fsFileName);
void serialize_LoadShaderFromMemory(const char* vsCode, const char* fsCode);
void serialize_IsShaderValid(const Shader& shader);
void serialize_GetShaderLocation(const Shader& shader, const char* uniformName);
void serialize_GetShaderLocationAttrib(const Shader& shader, const char* attribName);
void serialize_SetShaderValue(const Shader& shader, int locIndex, const void* value, int uniformType);
void serialize_SetShaderValueV(const Shader& shader, int locIndex, const void* value, int uniformType, int count);
void serialize_SetShaderValueMatrix(const Shader& shader, int locIndex, const Matrix& mat);
void serialize_SetShaderValueTexture(const Shader& shader, int locIndex, Texture2D texture);
void serialize_UnloadShader(const Shader& shader);
void serialize_GetScreenToWorldRay(const Vector2& position, Camera camera);
void serialize_GetScreenToWorldRayEx(const Vector2& position, Camera camera, int width, int height);
void serialize_GetWorldToScreen(const Vector3& position, Camera camera);
void serialize_GetWorldToScreenEx(const Vector3& position, Camera camera, int width, int height);
void serialize_GetWorldToScreen2D(const Vector2& position, const Camera2D& camera);
void serialize_GetScreenToWorld2D(const Vector2& position, const Camera2D& camera);
void serialize_GetCameraMatrix(Camera camera);
void serialize_GetCameraMatrix2D(const Camera2D& camera);
void serialize_SetTargetFPS(int fps);
void serialize_GetFrameTime();
void serialize_GetTime();
void serialize_GetFPS();
void serialize_SwapScreenBuffer();
void serialize_PollInputEvents();
void serialize_WaitTime(double seconds);
void serialize_SetRandomSeed(unsigned int seed);
void serialize_GetRandomValue(int min, int max);
void serialize_UnloadRandomSequence(const int* sequence);
void serialize_TakeScreenshot(const char* fileName);
void serialize_SetConfigFlags(unsigned int flags);
void serialize_OpenURL(const char* url);
void serialize_TraceLog(int logLevel, const char* text);
void serialize_SetTraceLogLevel(int logLevel);
void serialize_MemFree(const void* ptr);
void serialize_SetTraceLogCallback(TraceLogCallback callback);
void serialize_SetLoadFileDataCallback(LoadFileDataCallback callback);
void serialize_SetSaveFileDataCallback(SaveFileDataCallback callback);
void serialize_SetLoadFileTextCallback(LoadFileTextCallback callback);
void serialize_SetSaveFileTextCallback(SaveFileTextCallback callback);
void serialize_UnloadFileData(const unsigned char* data);
void serialize_SaveFileData(const char* fileName, const void* data, int dataSize);
void serialize_ExportDataAsCode(const unsigned char* data, int dataSize, const char* fileName);
void serialize_UnloadFileText(const char* text);
void serialize_SaveFileText(const char* fileName, const char* text);
void serialize_FileExists(const char* fileName);
void serialize_DirectoryExists(const char* dirPath);
void serialize_IsFileExtension(const char* fileName, const char* ext);
void serialize_GetFileLength(const char* fileName);
void serialize_MakeDirectory(const char* dirPath);
void serialize_ChangeDirectory(const char* dir);
void serialize_IsPathFile(const char* path);
void serialize_IsFileNameValid(const char* fileName);
void serialize_LoadDirectoryFiles(const char* dirPath);
void serialize_LoadDirectoryFilesEx(const char* basePath, const char* filter, bool scanSubdirs);
void serialize_UnloadDirectoryFiles(const FilePathList& files);
void serialize_IsFileDropped();
void serialize_LoadDroppedFiles();
void serialize_UnloadDroppedFiles(const FilePathList& files);
void serialize_GetFileModTime(const char* fileName);
void serialize_ComputeCRC32(const unsigned char* data, int dataSize);
void serialize_LoadAutomationEventList(const char* fileName);
void serialize_UnloadAutomationEventList(const AutomationEventList& list);
void serialize_ExportAutomationEventList(const AutomationEventList& list, const char* fileName);
void serialize_SetAutomationEventList(const AutomationEventList* list);
void serialize_SetAutomationEventBaseFrame(int frame);
void serialize_StartAutomationEventRecording();
void serialize_StopAutomationEventRecording();
void serialize_PlayAutomationEvent(const AutomationEvent& event);
void serialize_IsKeyPressed(int key);
void serialize_IsKeyPressedRepeat(int key);
void serialize_IsKeyDown(int key);
void serialize_IsKeyReleased(int key);
void serialize_IsKeyUp(int key);
void serialize_GetKeyPressed();
void serialize_GetCharPressed();
void serialize_SetExitKey(int key);
void serialize_IsGamepadAvailable(int gamepad);
void serialize_IsGamepadButtonPressed(int gamepad, int button);
void serialize_IsGamepadButtonDown(int gamepad, int button);
void serialize_IsGamepadButtonReleased(int gamepad, int button);
void serialize_IsGamepadButtonUp(int gamepad, int button);
void serialize_GetGamepadButtonPressed();
void serialize_GetGamepadAxisCount(int gamepad);
void serialize_GetGamepadAxisMovement(int gamepad, int axis);
void serialize_SetGamepadMappings(const char* mappings);
void serialize_SetGamepadVibration(int gamepad, float leftMotor, float rightMotor, float duration);
void serialize_IsMouseButtonPressed(int button);
void serialize_IsMouseButtonDown(int button);
void serialize_IsMouseButtonReleased(int button);
void serialize_IsMouseButtonUp(int button);
void serialize_GetMouseX();
void serialize_GetMouseY();
void serialize_GetMousePosition();
void serialize_GetMouseDelta();
void serialize_SetMousePosition(int x, int y);
void serialize_SetMouseOffset(int offsetX, int offsetY);
void serialize_SetMouseScale(float scaleX, float scaleY);
void serialize_GetMouseWheelMove();
void serialize_GetMouseWheelMoveV();
void serialize_SetMouseCursor(int cursor);
void serialize_GetTouchX();
void serialize_GetTouchY();
void serialize_GetTouchPosition(int index);
void serialize_GetTouchPointId(int index);
void serialize_GetTouchPointCount();
void serialize_SetGesturesEnabled(unsigned int flags);
void serialize_IsGestureDetected(unsigned int gesture);
void serialize_GetGestureDetected();
void serialize_GetGestureHoldDuration();
void serialize_GetGestureDragVector();
void serialize_GetGestureDragAngle();
void serialize_GetGesturePinchVector();
void serialize_GetGesturePinchAngle();
void serialize_UpdateCamera(const Camera* camera, int mode);
void serialize_UpdateCameraPro(const Camera* camera, const Vector3& movement, const Vector3& rotation, float zoom);
void serialize_SetShapesTexture(Texture2D texture, const Rectangle& source);
void serialize_GetShapesTexture();
void serialize_GetShapesTextureRectangle();
void serialize_DrawPixel(int posX, int posY, const Color& color);
void serialize_DrawPixelV(const Vector2& position, const Color& color);
void serialize_DrawLine(int startPosX, int startPosY, int endPosX, int endPosY, const Color& color);
void serialize_DrawLineV(const Vector2& startPos, const Vector2& endPos, const Color& color);
void serialize_DrawLineEx(const Vector2& startPos, const Vector2& endPos, float thick, const Color& color);
void serialize_DrawLineStrip(const Vector2* points, int pointCount, const Color& color);
void serialize_DrawLineBezier(const Vector2& startPos, const Vector2& endPos, float thick, const Color& color);
void serialize_DrawCircle(int centerX, int centerY, float radius, const Color& color);
void serialize_DrawCircleSector(const Vector2& center, float radius, float startAngle, float endAngle, int segments, const Color& color);
void serialize_DrawCircleSectorLines(const Vector2& center, float radius, float startAngle, float endAngle, int segments, const Color& color);
void serialize_DrawCircleGradient(int centerX, int centerY, float radius, const Color& inner, const Color& outer);
void serialize_DrawCircleV(const Vector2& center, float radius, const Color& color);
void serialize_DrawCircleLines(int centerX, int centerY, float radius, const Color& color);
void serialize_DrawCircleLinesV(const Vector2& center, float radius, const Color& color);
void serialize_DrawEllipse(int centerX, int centerY, float radiusH, float radiusV, const Color& color);
void serialize_DrawEllipseV(const Vector2& center, float radiusH, float radiusV, const Color& color);
void serialize_DrawEllipseLines(int centerX, int centerY, float radiusH, float radiusV, const Color& color);
void serialize_DrawEllipseLinesV(const Vector2& center, float radiusH, float radiusV, const Color& color);
void serialize_DrawRing(const Vector2& center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, const Color& color);
void serialize_DrawRingLines(const Vector2& center, float innerRadius, float outerRadius, float startAngle, float endAngle, int segments, const Color& color);
void serialize_DrawRectangle(int posX, int posY, int width, int height, const Color& color);
void serialize_DrawRectangleV(const Vector2& position, const Vector2& size, const Color& color);
void serialize_DrawRectangleRec(const Rectangle& rec, const Color& color);
void serialize_DrawRectanglePro(const Rectangle& rec, const Vector2& origin, float rotation, const Color& color);
void serialize_DrawRectangleGradientV(int posX, int posY, int width, int height, const Color& top, const Color& bottom);
void serialize_DrawRectangleGradientH(int posX, int posY, int width, int height, const Color& left, const Color& right);
void serialize_DrawRectangleGradientEx(const Rectangle& rec, const Color& topLeft, const Color& bottomLeft, const Color& bottomRight, const Color& topRight);
void serialize_DrawRectangleLines(int posX, int posY, int width, int height, const Color& color);
void serialize_DrawRectangleLinesEx(const Rectangle& rec, float lineThick, const Color& color);
void serialize_DrawRectangleRounded(const Rectangle& rec, float roundness, int segments, const Color& color);
void serialize_DrawRectangleRoundedLines(const Rectangle& rec, float roundness, int segments, const Color& color);
void serialize_DrawRectangleRoundedLinesEx(const Rectangle& rec, float roundness, int segments, float lineThick, const Color& color);
void serialize_DrawTriangle(const Vector2& v1, const Vector2& v2, const Vector2& v3, const Color& color);
void serialize_DrawTriangleLines(const Vector2& v1, const Vector2& v2, const Vector2& v3, const Color& color);
void serialize_DrawTriangleFan(const Vector2* points, int pointCount, const Color& color);
void serialize_DrawTriangleStrip(const Vector2* points, int pointCount, const Color& color);
void serialize_DrawPoly(const Vector2& center, int sides, float radius, float rotation, const Color& color);
void serialize_DrawPolyLines(const Vector2& center, int sides, float radius, float rotation, const Color& color);
void serialize_DrawPolyLinesEx(const Vector2& center, int sides, float radius, float rotation, float lineThick, const Color& color);
void serialize_DrawSplineLinear(const Vector2* points, int pointCount, float thick, const Color& color);
void serialize_DrawSplineBasis(const Vector2* points, int pointCount, float thick, const Color& color);
void serialize_DrawSplineCatmullRom(const Vector2* points, int pointCount, float thick, const Color& color);
void serialize_DrawSplineBezierQuadratic(const Vector2* points, int pointCount, float thick, const Color& color);
void serialize_DrawSplineBezierCubic(const Vector2* points, int pointCount, float thick, const Color& color);
void serialize_DrawSplineSegmentLinear(const Vector2& p1, const Vector2& p2, float thick, const Color& color);
void serialize_DrawSplineSegmentBasis(const Vector2& p1, const Vector2& p2, const Vector2& p3, const Vector2& p4, float thick, const Color& color);
void serialize_DrawSplineSegmentCatmullRom(const Vector2& p1, const Vector2& p2, const Vector2& p3, const Vector2& p4, float thick, const Color& color);
void serialize_DrawSplineSegmentBezierQuadratic(const Vector2& p1, const Vector2& c2, const Vector2& p3, float thick, const Color& color);
void serialize_DrawSplineSegmentBezierCubic(const Vector2& p1, const Vector2& c2, const Vector2& c3, const Vector2& p4, float thick, const Color& color);
void serialize_GetSplinePointLinear(const Vector2& startPos, const Vector2& endPos, float t);
void serialize_GetSplinePointBasis(const Vector2& p1, const Vector2& p2, const Vector2& p3, const Vector2& p4, float t);
void serialize_GetSplinePointCatmullRom(const Vector2& p1, const Vector2& p2, const Vector2& p3, const Vector2& p4, float t);
void serialize_GetSplinePointBezierQuad(const Vector2& p1, const Vector2& c2, const Vector2& p3, float t);
void serialize_GetSplinePointBezierCubic(const Vector2& p1, const Vector2& c2, const Vector2& c3, const Vector2& p4, float t);
void serialize_CheckCollisionRecs(const Rectangle& rec1, const Rectangle& rec2);
void serialize_CheckCollisionCircles(const Vector2& center1, float radius1, const Vector2& center2, float radius2);
void serialize_CheckCollisionCircleRec(const Vector2& center, float radius, const Rectangle& rec);
void serialize_CheckCollisionCircleLine(const Vector2& center, float radius, const Vector2& p1, const Vector2& p2);
void serialize_CheckCollisionPointRec(const Vector2& point, const Rectangle& rec);
void serialize_CheckCollisionPointCircle(const Vector2& point, const Vector2& center, float radius);
void serialize_CheckCollisionPointTriangle(const Vector2& point, const Vector2& p1, const Vector2& p2, const Vector2& p3);
void serialize_CheckCollisionPointLine(const Vector2& point, const Vector2& p1, const Vector2& p2, int threshold);
void serialize_CheckCollisionPointPoly(const Vector2& point, const Vector2* points, int pointCount);
void serialize_CheckCollisionLines(const Vector2& startPos1, const Vector2& endPos1, const Vector2& startPos2, const Vector2& endPos2, const Vector2* collisionPoint);
void serialize_GetCollisionRec(const Rectangle& rec1, const Rectangle& rec2);
void serialize_LoadImage(const char* fileName);
void serialize_LoadImageRaw(const char* fileName, int width, int height, int format, int headerSize);
void serialize_LoadImageAnim(const char* fileName, const int* frames);
void serialize_LoadImageAnimFromMemory(const char* fileType, const unsigned char* fileData, int dataSize, const int* frames);
void serialize_LoadImageFromMemory(const char* fileType, const unsigned char* fileData, int dataSize);
void serialize_LoadImageFromTexture(Texture2D texture);
void serialize_LoadImageFromScreen();
void serialize_IsImageValid(const Image& image);
void serialize_UnloadImage(const Image& image);
void serialize_ExportImage(const Image& image, const char* fileName);
void serialize_ExportImageAsCode(const Image& image, const char* fileName);
void serialize_GenImageColor(int width, int height, const Color& color);
void serialize_GenImageGradientLinear(int width, int height, int direction, const Color& start, const Color& end);
void serialize_GenImageGradientRadial(int width, int height, float density, const Color& inner, const Color& outer);
void serialize_GenImageGradientSquare(int width, int height, float density, const Color& inner, const Color& outer);
void serialize_GenImageChecked(int width, int height, int checksX, int checksY, const Color& col1, const Color& col2);
void serialize_GenImageWhiteNoise(int width, int height, float factor);
void serialize_GenImagePerlinNoise(int width, int height, int offsetX, int offsetY, float scale);
void serialize_GenImageCellular(int width, int height, int tileSize);
void serialize_GenImageText(int width, int height, const char* text);
void serialize_ImageCopy(const Image& image);
void serialize_ImageFromImage(const Image& image, const Rectangle& rec);
void serialize_ImageFromChannel(const Image& image, int selectedChannel);
void serialize_ImageText(const char* text, int fontSize, const Color& color);
void serialize_ImageTextEx(const Font& font, const char* text, float fontSize, float spacing, const Color& tint);
void serialize_ImageFormat(const Image* image, int newFormat);
void serialize_ImageToPOT(const Image* image, const Color& fill);
void serialize_ImageCrop(const Image* image, const Rectangle& crop);
void serialize_ImageAlphaCrop(const Image* image, float threshold);
void serialize_ImageAlphaClear(const Image* image, const Color& color, float threshold);
void serialize_ImageAlphaMask(const Image* image, const Image& alphaMask);
void serialize_ImageAlphaPremultiply(const Image* image);
void serialize_ImageBlurGaussian(const Image* image, int blurSize);
void serialize_ImageKernelConvolution(const Image* image, const float* kernel, int kernelSize);
void serialize_ImageResize(const Image* image, int newWidth, int newHeight);
void serialize_ImageResizeNN(const Image* image, int newWidth, int newHeight);
void serialize_ImageResizeCanvas(const Image* image, int newWidth, int newHeight, int offsetX, int offsetY, const Color& fill);
void serialize_ImageMipmaps(const Image* image);
void serialize_ImageDither(const Image* image, int rBpp, int gBpp, int bBpp, int aBpp);
void serialize_ImageFlipVertical(const Image* image);
void serialize_ImageFlipHorizontal(const Image* image);
void serialize_ImageRotate(const Image* image, int degrees);
void serialize_ImageRotateCW(const Image* image);
void serialize_ImageRotateCCW(const Image* image);
void serialize_ImageColorTint(const Image* image, const Color& color);
void serialize_ImageColorInvert(const Image* image);
void serialize_ImageColorGrayscale(const Image* image);
void serialize_ImageColorContrast(const Image* image, float contrast);
void serialize_ImageColorBrightness(const Image* image, int brightness);
void serialize_ImageColorReplace(const Image* image, const Color& color, const Color& replace);
void serialize_UnloadImageColors(const Color* colors);
void serialize_UnloadImagePalette(const Color* colors);
void serialize_GetImageAlphaBorder(const Image& image, float threshold);
void serialize_GetImageColor(const Image& image, int x, int y);
void serialize_ImageClearBackground(const Image* dst, const Color& color);
void serialize_ImageDrawPixel(const Image* dst, int posX, int posY, const Color& color);
void serialize_ImageDrawPixelV(const Image* dst, const Vector2& position, const Color& color);
void serialize_ImageDrawLine(const Image* dst, int startPosX, int startPosY, int endPosX, int endPosY, const Color& color);
void serialize_ImageDrawLineV(const Image* dst, const Vector2& start, const Vector2& end, const Color& color);
void serialize_ImageDrawLineEx(const Image* dst, const Vector2& start, const Vector2& end, int thick, const Color& color);
void serialize_ImageDrawCircle(const Image* dst, int centerX, int centerY, int radius, const Color& color);
void serialize_ImageDrawCircleV(const Image* dst, const Vector2& center, int radius, const Color& color);
void serialize_ImageDrawCircleLines(const Image* dst, int centerX, int centerY, int radius, const Color& color);
void serialize_ImageDrawCircleLinesV(const Image* dst, const Vector2& center, int radius, const Color& color);
void serialize_ImageDrawRectangle(const Image* dst, int posX, int posY, int width, int height, const Color& color);
void serialize_ImageDrawRectangleV(const Image* dst, const Vector2& position, const Vector2& size, const Color& color);
void serialize_ImageDrawRectangleRec(const Image* dst, const Rectangle& rec, const Color& color);
void serialize_ImageDrawRectangleLines(const Image* dst, const Rectangle& rec, int thick, const Color& color);
void serialize_ImageDrawTriangle(const Image* dst, const Vector2& v1, const Vector2& v2, const Vector2& v3, const Color& color);
void serialize_ImageDrawTriangleEx(const Image* dst, const Vector2& v1, const Vector2& v2, const Vector2& v3, const Color& c1, const Color& c2, const Color& c3);
void serialize_ImageDrawTriangleLines(const Image* dst, const Vector2& v1, const Vector2& v2, const Vector2& v3, const Color& color);
void serialize_ImageDrawTriangleFan(const Image* dst, const Vector2* points, int pointCount, const Color& color);
void serialize_ImageDrawTriangleStrip(const Image* dst, const Vector2* points, int pointCount, const Color& color);
void serialize_ImageDraw(const Image* dst, const Image& src, const Rectangle& srcRec, const Rectangle& dstRec, const Color& tint);
void serialize_ImageDrawText(const Image* dst, const char* text, int posX, int posY, int fontSize, const Color& color);
void serialize_ImageDrawTextEx(const Image* dst, const Font& font, const char* text, const Vector2& position, float fontSize, float spacing, const Color& tint);
void serialize_LoadTexture(const char* fileName);
void serialize_LoadTextureFromImage(const Image& image);
void serialize_LoadTextureCubemap(const Image& image, int layout);
void serialize_LoadRenderTexture(int width, int height);
void serialize_IsTextureValid(Texture2D texture);
void serialize_UnloadTexture(Texture2D texture);
void serialize_IsRenderTextureValid(RenderTexture2D target);
void serialize_UnloadRenderTexture(RenderTexture2D target);
void serialize_UpdateTexture(Texture2D texture, const void* pixels);
void serialize_UpdateTextureRec(Texture2D texture, const Rectangle& rec, const void* pixels);
void serialize_GenTextureMipmaps(const Texture2D* texture);
void serialize_SetTextureFilter(Texture2D texture, int filter);
void serialize_SetTextureWrap(Texture2D texture, int wrap);
void serialize_DrawTexture(Texture2D texture, int posX, int posY, const Color& tint);
void serialize_DrawTextureV(Texture2D texture, const Vector2& position, const Color& tint);
void serialize_DrawTextureEx(Texture2D texture, const Vector2& position, float rotation, float scale, const Color& tint);
void serialize_DrawTextureRec(Texture2D texture, const Rectangle& source, const Vector2& position, const Color& tint);
void serialize_DrawTexturePro(Texture2D texture, const Rectangle& source, const Rectangle& dest, const Vector2& origin, float rotation, const Color& tint);
void serialize_DrawTextureNPatch(Texture2D texture, const NPatchInfo& nPatchInfo, const Rectangle& dest, const Vector2& origin, float rotation, const Color& tint);
void serialize_ColorIsEqual(const Color& col1, const Color& col2);
void serialize_Fade(const Color& color, float alpha);
void serialize_ColorToInt(const Color& color);
void serialize_ColorNormalize(const Color& color);
void serialize_ColorFromNormalized(const Vector4& normalized);
void serialize_ColorToHSV(const Color& color);
void serialize_ColorFromHSV(float hue, float saturation, float value);
void serialize_ColorTint(const Color& color, const Color& tint);
void serialize_ColorBrightness(const Color& color, float factor);
void serialize_ColorContrast(const Color& color, float contrast);
void serialize_ColorAlpha(const Color& color, float alpha);
void serialize_ColorAlphaBlend(const Color& dst, const Color& src, const Color& tint);
void serialize_ColorLerp(const Color& color1, const Color& color2, float factor);
void serialize_GetColor(unsigned int hexValue);
void serialize_GetPixelColor(const void* srcPtr, int format);
void serialize_SetPixelColor(const void* dstPtr, const Color& color, int format);
void serialize_GetPixelDataSize(int width, int height, int format);
void serialize_GetFontDefault();
void serialize_LoadFont(const char* fileName);
void serialize_LoadFontEx(const char* fileName, int fontSize, const int* codepoints, int codepointCount);
void serialize_LoadFontFromImage(const Image& image, const Color& key, int firstChar);
void serialize_LoadFontFromMemory(const char* fileType, const unsigned char* fileData, int dataSize, int fontSize, const int* codepoints, int codepointCount);
void serialize_IsFontValid(const Font& font);
void serialize_UnloadFontData(const GlyphInfo* glyphs, int glyphCount);
void serialize_UnloadFont(const Font& font);
void serialize_ExportFontAsCode(const Font& font, const char* fileName);
void serialize_DrawFPS(int posX, int posY);
void serialize_DrawText(const char* text, int posX, int posY, int fontSize, const Color& color);
void serialize_DrawTextEx(const Font& font, const char* text, const Vector2& position, float fontSize, float spacing, const Color& tint);
void serialize_DrawTextPro(const Font& font, const char* text, const Vector2& position, const Vector2& origin, float rotation, float fontSize, float spacing, const Color& tint);
void serialize_DrawTextCodepoint(const Font& font, int codepoint, const Vector2& position, float fontSize, const Color& tint);
void serialize_DrawTextCodepoints(const Font& font, const int* codepoints, int codepointCount, const Vector2& position, float fontSize, float spacing, const Color& tint);
void serialize_SetTextLineSpacing(int spacing);
void serialize_MeasureText(const char* text, int fontSize);
void serialize_MeasureTextEx(const Font& font, const char* text, float fontSize, float spacing);
void serialize_GetGlyphIndex(const Font& font, int codepoint);
void serialize_GetGlyphInfo(const Font& font, int codepoint);
void serialize_GetGlyphAtlasRec(const Font& font, int codepoint);
void serialize_UnloadUTF8(const char* text);
void serialize_UnloadCodepoints(const int* codepoints);
void serialize_GetCodepointCount(const char* text);
void serialize_GetCodepoint(const char* text, const int* codepointSize);
void serialize_GetCodepointNext(const char* text, const int* codepointSize);
void serialize_GetCodepointPrevious(const char* text, const int* codepointSize);
void serialize_TextCopy(const char* dst, const char* src);
void serialize_TextIsEqual(const char* text1, const char* text2);
void serialize_TextLength(const char* text);
void serialize_TextAppend(const char* text, const char* append, const int* position);
void serialize_TextFindIndex(const char* text, const char* find);
void serialize_TextToInteger(const char* text);
void serialize_TextToFloat(const char* text);
void serialize_DrawLine3D(const Vector3& startPos, const Vector3& endPos, const Color& color);
void serialize_DrawPoint3D(const Vector3& position, const Color& color);
void serialize_DrawCircle3D(const Vector3& center, float radius, const Vector3& rotationAxis, float rotationAngle, const Color& color);
void serialize_DrawTriangle3D(const Vector3& v1, const Vector3& v2, const Vector3& v3, const Color& color);
void serialize_DrawTriangleStrip3D(const Vector3* points, int pointCount, const Color& color);
void serialize_DrawCube(const Vector3& position, float width, float height, float length, const Color& color);
void serialize_DrawCubeV(const Vector3& position, const Vector3& size, const Color& color);
void serialize_DrawCubeWires(const Vector3& position, float width, float height, float length, const Color& color);
void serialize_DrawCubeWiresV(const Vector3& position, const Vector3& size, const Color& color);
void serialize_DrawSphere(const Vector3& centerPos, float radius, const Color& color);
void serialize_DrawSphereEx(const Vector3& centerPos, float radius, int rings, int slices, const Color& color);
void serialize_DrawSphereWires(const Vector3& centerPos, float radius, int rings, int slices, const Color& color);
void serialize_DrawCylinder(const Vector3& position, float radiusTop, float radiusBottom, float height, int slices, const Color& color);
void serialize_DrawCylinderEx(const Vector3& startPos, const Vector3& endPos, float startRadius, float endRadius, int sides, const Color& color);
void serialize_DrawCylinderWires(const Vector3& position, float radiusTop, float radiusBottom, float height, int slices, const Color& color);
void serialize_DrawCylinderWiresEx(const Vector3& startPos, const Vector3& endPos, float startRadius, float endRadius, int sides, const Color& color);
void serialize_DrawCapsule(const Vector3& startPos, const Vector3& endPos, float radius, int slices, int rings, const Color& color);
void serialize_DrawCapsuleWires(const Vector3& startPos, const Vector3& endPos, float radius, int slices, int rings, const Color& color);
void serialize_DrawPlane(const Vector3& centerPos, const Vector2& size, const Color& color);
void serialize_DrawRay(const Ray& ray, const Color& color);
void serialize_DrawGrid(int slices, float spacing);
void serialize_LoadModel(const char* fileName);
void serialize_LoadModelFromMesh(const Mesh& mesh);
void serialize_IsModelValid(const Model& model);
void serialize_UnloadModel(const Model& model);
void serialize_GetModelBoundingBox(const Model& model);
void serialize_DrawModel(const Model& model, const Vector3& position, float scale, const Color& tint);
void serialize_DrawModelEx(const Model& model, const Vector3& position, const Vector3& rotationAxis, float rotationAngle, const Vector3& scale, const Color& tint);
void serialize_DrawModelWires(const Model& model, const Vector3& position, float scale, const Color& tint);
void serialize_DrawModelWiresEx(const Model& model, const Vector3& position, const Vector3& rotationAxis, float rotationAngle, const Vector3& scale, const Color& tint);
void serialize_DrawModelPoints(const Model& model, const Vector3& position, float scale, const Color& tint);
void serialize_DrawModelPointsEx(const Model& model, const Vector3& position, const Vector3& rotationAxis, float rotationAngle, const Vector3& scale, const Color& tint);
void serialize_DrawBoundingBox(const BoundingBox& box, const Color& color);
void serialize_DrawBillboard(Camera camera, Texture2D texture, const Vector3& position, float scale, const Color& tint);
void serialize_DrawBillboardRec(Camera camera, Texture2D texture, const Rectangle& source, const Vector3& position, const Vector2& size, const Color& tint);
void serialize_DrawBillboardPro(Camera camera, Texture2D texture, const Rectangle& source, const Vector3& position, const Vector3& up, const Vector2& size, const Vector2& origin, float rotation, const Color& tint);
void serialize_UploadMesh(const Mesh* mesh, bool dynamic);
void serialize_UpdateMeshBuffer(const Mesh& mesh, int index, const void* data, int dataSize, int offset);
void serialize_UnloadMesh(const Mesh& mesh);
void serialize_DrawMesh(const Mesh& mesh, const Material& material, const Matrix& transform);
void serialize_DrawMeshInstanced(const Mesh& mesh, const Material& material, const Matrix* transforms, int instances);
void serialize_GetMeshBoundingBox(const Mesh& mesh);
void serialize_GenMeshTangents(const Mesh* mesh);
void serialize_ExportMesh(const Mesh& mesh, const char* fileName);
void serialize_ExportMeshAsCode(const Mesh& mesh, const char* fileName);
void serialize_GenMeshPoly(int sides, float radius);
void serialize_GenMeshPlane(float width, float length, int resX, int resZ);
void serialize_GenMeshCube(float width, float height, float length);
void serialize_GenMeshSphere(float radius, int rings, int slices);
void serialize_GenMeshHemiSphere(float radius, int rings, int slices);
void serialize_GenMeshCylinder(float radius, float height, int slices);
void serialize_GenMeshCone(float radius, float height, int slices);
void serialize_GenMeshTorus(float radius, float size, int radSeg, int sides);
void serialize_GenMeshKnot(float radius, float size, int radSeg, int sides);
void serialize_GenMeshHeightmap(const Image& heightmap, const Vector3& size);
void serialize_GenMeshCubicmap(const Image& cubicmap, const Vector3& cubeSize);
void serialize_LoadMaterialDefault();
void serialize_IsMaterialValid(const Material& material);
void serialize_UnloadMaterial(const Material& material);
void serialize_SetMaterialTexture(const Material* material, int mapType, Texture2D texture);
void serialize_SetModelMeshMaterial(const Model* model, int meshId, int materialId);
void serialize_UpdateModelAnimation(const Model& model, const ModelAnimation& anim, int frame);
void serialize_UpdateModelAnimationBones(const Model& model, const ModelAnimation& anim, int frame);
void serialize_UnloadModelAnimation(const ModelAnimation& anim);
void serialize_UnloadModelAnimations(const ModelAnimation* animations, int animCount);
void serialize_IsModelAnimationValid(const Model& model, const ModelAnimation& anim);
void serialize_CheckCollisionSpheres(const Vector3& center1, float radius1, const Vector3& center2, float radius2);
void serialize_CheckCollisionBoxes(const BoundingBox& box1, const BoundingBox& box2);
void serialize_CheckCollisionBoxSphere(const BoundingBox& box, const Vector3& center, float radius);
void serialize_GetRayCollisionSphere(const Ray& ray, const Vector3& center, float radius);
void serialize_GetRayCollisionBox(const Ray& ray, const BoundingBox& box);
void serialize_GetRayCollisionMesh(const Ray& ray, const Mesh& mesh, const Matrix& transform);
void serialize_GetRayCollisionTriangle(const Ray& ray, const Vector3& p1, const Vector3& p2, const Vector3& p3);
void serialize_GetRayCollisionQuad(const Ray& ray, const Vector3& p1, const Vector3& p2, const Vector3& p3, const Vector3& p4);
void serialize_InitAudioDevice();
void serialize_CloseAudioDevice();
void serialize_IsAudioDeviceReady();
void serialize_SetMasterVolume(float volume);
void serialize_GetMasterVolume();
void serialize_LoadWave(const char* fileName);
void serialize_LoadWaveFromMemory(const char* fileType, const unsigned char* fileData, int dataSize);
void serialize_IsWaveValid(const Wave& wave);
void serialize_LoadSound(const char* fileName);
void serialize_LoadSoundFromWave(const Wave& wave);
void serialize_LoadSoundAlias(const Sound& source);
void serialize_IsSoundValid(const Sound& sound);
void serialize_UpdateSound(const Sound& sound, const void* data, int sampleCount);
void serialize_UnloadWave(const Wave& wave);
void serialize_UnloadSound(const Sound& sound);
void serialize_UnloadSoundAlias(const Sound& alias);
void serialize_ExportWave(const Wave& wave, const char* fileName);
void serialize_ExportWaveAsCode(const Wave& wave, const char* fileName);
void serialize_PlaySound(const Sound& sound);
void serialize_StopSound(const Sound& sound);
void serialize_PauseSound(const Sound& sound);
void serialize_ResumeSound(const Sound& sound);
void serialize_IsSoundPlaying(const Sound& sound);
void serialize_SetSoundVolume(const Sound& sound, float volume);
void serialize_SetSoundPitch(const Sound& sound, float pitch);
void serialize_SetSoundPan(const Sound& sound, float pan);
void serialize_WaveCopy(const Wave& wave);
void serialize_WaveCrop(const Wave* wave, int initFrame, int finalFrame);
void serialize_WaveFormat(const Wave* wave, int sampleRate, int sampleSize, int channels);
void serialize_UnloadWaveSamples(const float* samples);
void serialize_LoadMusicStream(const char* fileName);
void serialize_LoadMusicStreamFromMemory(const char* fileType, const unsigned char* data, int dataSize);
void serialize_IsMusicValid(const Music& music);
void serialize_UnloadMusicStream(const Music& music);
void serialize_PlayMusicStream(const Music& music);
void serialize_IsMusicStreamPlaying(const Music& music);
void serialize_UpdateMusicStream(const Music& music);
void serialize_StopMusicStream(const Music& music);
void serialize_PauseMusicStream(const Music& music);
void serialize_ResumeMusicStream(const Music& music);
void serialize_SeekMusicStream(const Music& music, float position);
void serialize_SetMusicVolume(const Music& music, float volume);
void serialize_SetMusicPitch(const Music& music, float pitch);
void serialize_SetMusicPan(const Music& music, float pan);
void serialize_GetMusicTimeLength(const Music& music);
void serialize_GetMusicTimePlayed(const Music& music);
void serialize_LoadAudioStream(unsigned int sampleRate, unsigned int sampleSize, unsigned int channels);
void serialize_IsAudioStreamValid(const AudioStream& stream);
void serialize_UnloadAudioStream(const AudioStream& stream);
void serialize_UpdateAudioStream(const AudioStream& stream, const void* data, int frameCount);
void serialize_IsAudioStreamProcessed(const AudioStream& stream);
void serialize_PlayAudioStream(const AudioStream& stream);
void serialize_PauseAudioStream(const AudioStream& stream);
void serialize_ResumeAudioStream(const AudioStream& stream);
void serialize_IsAudioStreamPlaying(const AudioStream& stream);
void serialize_StopAudioStream(const AudioStream& stream);
void serialize_SetAudioStreamVolume(const AudioStream& stream, float volume);
void serialize_SetAudioStreamPitch(const AudioStream& stream, float pitch);
void serialize_SetAudioStreamPan(const AudioStream& stream, float pan);
void serialize_SetAudioStreamBufferSizeDefault(int size);
void serialize_SetAudioStreamCallback(const AudioStream& stream, AudioCallback callback);
void serialize_AttachAudioStreamProcessor(const AudioStream& stream, AudioCallback processor);
void serialize_DetachAudioStreamProcessor(const AudioStream& stream, AudioCallback processor);
void serialize_AttachAudioMixedProcessor(AudioCallback processor);
void serialize_DetachAudioMixedProcessor(AudioCallback processor);

#endif // RAYLIB_SERIALIZATION_H
